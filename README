Templates to be served by my unofficial automatic card generator hosted at https://gfa.maeyanie.com/cards/

Anyone is welcome to create and submit a template. You can also send me a blank card and a filled out example card and I'll make a template to fit it, and post it here.

The dataset used to generate the cards is by CheshySky, at: https://github.com/CheshySky/Grand-Fleet-Admiral
Any issues, fixes, or other contributions to the dataset should be directed that way.

I tried to make the JSON template format relatively flexible. If any modifications or extensions are needed to do what you're after, feel free to ask.

The templates are in JSON. Colours are specified in hex, using the HTML standard of "#RRGGBB"
The background image used is "Template-Faction.png" if it exists, falling back to "Template.png" if it doesn't.

{
    "font": "Font Name",    The name of the font. At the moment they're manually downloaded,
                            but any TrueType font which can be freely downloaded and used is fine.
    "textcolor": "#RGB",    Used for all the text. At the moment there's no override for specific 
                            sections, but this would be easy to add if anyone needs it.
    
    All sections are technically optional. They're primarily broken into two types, text and numeric.
    All entries in a section are also optional.
    
    The following text sections are available: faction, unit, traits, upgrades
    "text section": {
        "size": 10.0,               Floating-point number for the size of the text
        "x": 10,                    X position of the text, in pixels from the left
        "y": 10,                    Y position of the text, in pixels from the top
        "format": "A %s B",         Format passed through sprintf(), with one string argument.
        "center": true/false,       Whether or not to center the text, both horizontally and vertically
        "maxwidth": 200,            Limit the text to no wider than this many pixels
                                    If it would exceed this, it will word wrap until it fits
        "maxheight": 100            Limit the text to no taller than this many pixels
                                    If it would exceed this, the font size is reduced until it fits
    },
    
    The "traits" section, in addition to the standard text section settings, has the following:
    "traits": {
        "strike": true/false,       If true, include the number of Strike Bays as a trait
		"assault": true/false,      If true, include the number of Assault Bays as a trait
        "multiline": true/false,    If true, print the traits one per line
        "formateach": "A %s B"      Format passed through sprintf(), once per trait
    }
    
    The "upgrades" section, in addition to the standard text section settings, has the following:
    "upgrades": {
        "multiline": true/false,    If true, print the traits one per line    
        "formatchecked": "A %s B"   Format passed through sprintf(), for each checked upgrade
        "formatunchecked": "A %s B" Format passed through sprintf(), for each unchecked upgrade
        "formateach": "A %s B"      Format passed through sprintf(), if the above isn't used
    }
    
    The following numeric sections are available: points, shields, hull, thrust, crew
    It comes in two types, "text" and "dots" with text being the default if "type" isn't provided.
    "text numeric section": {
        "type": "text",
        "size": 10.0,               Floating-point number for the size of the text
        "x": 10,                    X position of the text, in pixels from the left
        "y": 10,                    Y position of the text, in pixels from the top
        "format": "A %d B",         Format passed through sprintf(), with one integer argument.
        "center": true/false        Whether or not to center the text, both horizontally and vertically.
    },
    
    "dots numeric section": {
        "type": "dots",
        "x": 10,                    X position of the center of the first dot, in pixels from the left
        "y": 10,                    Y position of the center of the first dot, in pixels from the top
        "cols": 5,                  Number of columns of dots to draw. After this many, they'll wrap to a new line
		"size": 60,                 The size of the dot, in pixels
		"color": "#RGB",            Draw the dot in the provided colour
		"border": 6,                Draw a border around the dot, this many pixels thick
        "background": "#RGB",       Draw the border (if any) in the provided colour
		"spacing": 80               The spacing between the centers of dots, both within a row and between rows
    },
    
    The "image" section is used for the picture of the ship.
    When resizing the image to fit, the aspect ratio will be preserved.
    "image": {
        "x": 10,                    X position of the center of the image, in pixels from the left
        "y": 10,                    Y position of the center of the image, in pixels from the top
        "z": 1,                     1 for above the template image, -1 for below the template image
        "background": "#RGB",       For z=-1, if the image has transparent areas, they will be filled with this colour
        "border": 10,               When using a background, add a border of this many pixels
        "w": 100,                   Width of the image, in pixels
        "h": 100                    Height of the image, in pixels
    }
    
    The "weaponname" section is an array of 4 text sections (as above), one for each of the faction's 4 weapon types
    If the faction has fewer than 4 weapon types, the remaining ones are skipped (but I could make that configurable)
    "weaponname": {
        [
            {
                # Text Section 1
            }, {
                # Text Section 2
            }, {
                # Text Section 3
            }, {
                # Text Section 4
            }
        ]
    },
    
    The "weaponcount" section is an array of 4 numeric sections (as above), one for each of the ship's 4 weapon types
    Any weapon types the ship doesn't have are skipped and won't be drawn (but I could make that configurable too)
    "weaponcount": {
        [
            {
                # Numeric Section 1
            }, {
                # Numeric Section 2
            }, {
                # Numeric Section 3
            }, {
                # Numeric Section 4
            }
        ]
    }
}
